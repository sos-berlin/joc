{
  "title": "job without name, vtemporary, spooler_id, log_append, separate_process, mail_xslt_stylesheet, replace attributes",
  "id": "schemas/joe/job/job",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "javaType": "com.sos.joc.model.joe.job.Job",
  "javaInterfaces" : [
    "com.sos.joc.model.joe.common.IJSObject"
  ],
  "type": "object",
  "properties": {
    "priority": {
      "type": "string"
    },
    "title": {
      "type": "string"
    },
    "isOrderJob": {
      "xmlElement": "order",
      "description": "possible values: yes, no, 1, 0, true, false",
      "type": "string"
    },
    "maxTasks": {
      "xmlElement": "tasks",
      "type": "integer",
      "minimum": 0
    },
    "minTasks": {
      "$ref": "../../common/nonNegativeInteger-schema.json"
    },
    "timeout": {
      "type": "string"
    },
    "idleTimeout": {
      "type": "string"
    },
    "forceIdleTimeout": {
      "description": "possible values: yes, no, 1, 0, true, false",
      "type": "string"
    },
    "processClass": {
      "description": "path of a process class object",
      "type": "string"
    },
    "javaOptions": {
      "type": "string"
    },
    "stopOnError": {
      "description": "possible values: yes, no, 1, 0, true, false",
      "type": "string"
    },
    "ignoreSignals": {
      "description": "possible values: positive Integer or SIGHUP, SIGINT, SIGQUIT, SIGILL, SIGTRAP, SIGABRT, SIGIOT, SIGBUS, SIGFPE, SIGKILL, SIGUSR1, SIGSEGV, SIGUSR2, SIGPIPE, SIGALRM, SIGTERM, SIGSTKFLT, SIGCHLD, SIGCONT, SIGSTOP, SIGTSTP, SIGTTIN, SIGTTOU, SIGURG, SIGXCPU, SIGXFSZ, SIGVTALRM, SIGPROF, SIGWINCH, SIGPOLL, SIGIO, SIGPWR, SIGSYS",
      "type": "string"
    },
    "warnIfLongerThan": {
      "type": "string"
    },
    "warnIfShorterThan": {
      "type": "string"
    },
    "stderrLogLevel": {
      "description": "possible values: error, warn, info, debug or debug[0-9]",
      "type": "string"
    },
    "credentialsKey": {
      "type": "string"
    },
    "loadUserProfile": {
      "description": "possible values: yes, no, 1, 0, true, false",
      "type": "string"
    },
    "visible": {
      "description": "possible values: yes, no, 1, 0, true, false or never",
      "type": "string"
    },
    "settings": {
      "$ref": "settings-schema.json"
    },
    "lockUses": {
      "type": "array",
      "xmlElement": "lock.use",
      "items": {
        "xmlElement": "lock.use",
        "type": "object",
        "javaType": "com.sos.joc.model.joe.job.LockUse",
        "required": [
          "lock"
        ],
        "properties": {
          "lock": {
            "description": "path to a lock object",
            "type": "string"
          },
          "exclusive": {
            "description": "possible values: yes, no, 1, 0, true, false",
            "type": "string"
          }
        }
      }
    },
    "params": {
      "$ref": "../common/params-schema.json"
    },
    "environment": {
      "$ref": "environment-schema.json"
    },
    "login": {
      "type": "object",
      "javaType": "com.sos.joc.model.joe.job.Login",
      "required": [
        "user",
        "password"
      ],
      "properties": {
        "user": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "xmlElement": "password.plain",
          "isXmlCData": true
        }
      }
    },
    "script": {
      "$ref": "script-schema.json"
    },
    "monitors": {
      "type": "array",
      "items": {
        "$ref": "monitor-schema.json"
      }
    },
    "monitorUses": {
      "type": "array",
      "xmlElement": "monitor.use",
      "items": {
        "xmlElement": "monitor.use",
        "type": "object",
        "javaType": "com.sos.joc.model.joe.job.MonitorUse",
        "required": [
          "monitor"
        ],
        "properties": {
          "monitor": {
            "description": "path to a monitor object",
            "type": "string"
          },
          "ordering": {
            "$ref": "../../common/nonNegativeInteger-schema.json"
          }
        }
      }
    },
    "startWhenDirectoriesChanged": {
      "type": "array",
      "xmlElement": "start_when_directory_changed",
      "items": {
		"type": "object",
        "javaType": "com.sos.joc.model.joe.job.StartWhenDirectoryChanged",
        "required": [
          "directory"
        ],
        "properties": {
          "directory": {
            "type": "string"
          },
          "regex": {
            "type": "string"
          }
        }
      }
    },
    "delayAfterErrors": {
      "type": "array",
      "xmlElement": "delay_after_error",
      "items": {
		"type": "object",
        "javaType": "com.sos.joc.model.joe.job.DelayAfterError",
        "required": [
          "errorCount",
          "delay"
        ],
        "properties": {
          "errorCount": {
            "$ref": "../../common/nonNegativeInteger-schema.json"
          },
          "delay": {
            "type": "string"
          }
        }
      }
    },
    "delayOrderAfterSetbacks": {
      "type": "array",
      "xmlElement": "delay_order_after_setback",
      "items": {
		"type": "object",
        "javaType": "com.sos.joc.model.joe.job.DelayOrderAfterSetback",
        "required": [
          "setbackCount"
        ],
        "properties": {
          "setbackCount": {
            "$ref": "../../common/nonNegativeInteger-schema.json"
          },
          "delay": {
            "type": "string"
          },
          "isMaximum": {
            "description": "possible values: yes, no, 1, 0, true, false",
            "type": "string"
          }
        }
      }
    },
    "runTime": {
      "$ref": "../schedule/runTime-schema.json"
    },
    "commands": {
      "type": "array",
      "items": {
        "type": "object",
        "javaType": "com.sos.joc.model.joe.job.Commands",
        "properties": {
          "onExitCode": {
            "description": "possible values: success, error or space separated collection of numbers or a unix signal",
            "type": "string"
          },
          "addOrders": {
            "type": "array",
            "xmlElement": "add_order",
            "items": {
              "$ref": "../order/addOrder-schema.json"
            }
          },
          "startJobs": {
            "type": "array",
            "xmlElement": "start_job",
            "items": {
              "$ref": "startJob-schema.json"
            }
          }
        }
      }
    }
  }
}
